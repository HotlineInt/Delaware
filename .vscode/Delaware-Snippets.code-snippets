{
	// Place your Delaware workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Carbon": {
		"scope": "lua,luau",
		"prefix": "carbon",
		"body": [
			"local Carbon = require(game:GetService(\"ReplicatedStorage\"):WaitForChild(\"Carbon\"))"
		],
		"description": "Retrive Carbon"
	},
	"CUI Component": {
		"scope": "lua,luau",
		"prefix": "cc",
		"body": [
			"local Carbon = require(game:GetService(\"ReplicatedStorage\"):WaitForChild(\"Carbon\"))",
			"local CUI = require(Carbon.UI.CUI)",
			"",
			"return function(Props : {})",
			"\t${0:}",
			"end",
		]
	},
	"Service": {
		"prefix": [
			"service"
		],
		"body": [
			"local ${0:Name}Service = game:GetService(\"${0:Name}Service\")"
		],
		"description": "Roblox Service"
	},
	"Knit Service": {
		"prefix": [
			"knitservice"
		],
		"body": [
			"local ${0:$TM_FILENAME_BASE} = {",
			"\tName = \"${0:$TM_FILENAME_BASE}\",",
			"\tClient = {},",
			"}",
			"",
			"function ${0:$TM_FILENAME_BASE}:KnitStart()",
			"\t",
			"end",
			"",
			"function ${0:$TM_FILENAME_BASE}:KnitInit()",
			"\t",
			"end",
			"",
			"return ${0:$TM_FILENAME_BASE}",
			""
		],
		"description": "Knit Service template"
	}
}